---  
  - name: Init Swarm Master
    hosts: masters
    gather_facts: False
    remote_user: ec2-user
    run_once: true
    tasks:
   
      - name: Swarm Init
        command: docker swarm init --advertise-addr {{ inventory_hostname }}

      - name: Get Worker Token
        command: docker swarm join-token worker -q
        register: worker_token

      - name: Show Worker Token
        debug: var=worker_token.stdout

      - name: Master Token
        command: docker swarm join-token manager -q
        register: master_token

      - name: Show Master Token
        debug: var=master_token.stdout

  
  - name: Join Swarm Cluster
    hosts: workers
    remote_user: ec2-user
    run_once: true
    gather_facts: False
    vars:
      token: "{{ hostvars[groups['masters'][0]]['worker_token']['stdout'] }}"
      master: "{{ hostvars[groups['masters'][0]]['inventory_hostname'] }}"
    tasks:
      - name: Join Swarm Cluster as a Worker
        command: docker swarm join --token {{ token }} {{ master }}:2377
        register: worker

      - name: Show Results
        debug: var=worker.stdout

      - name: Show Errors
        debug: var=worker.stdout

  - name: Copy file 
    hosts: all
    remote_user: ec2-user
    gather_facts: False
    tasks:
      - name: Copy Dockerfile
        copy:
         src:  main.go
         dest: "main.go"
  
  - name: Copy app 
    hosts: all
    remote_user: ec2-user
    gather_facts: False
    tasks:
      - name: Copy app
        copy:
         src:  Dockerfile
         dest: "Dockerfile"

  - name: Render Docker compose config
    hosts: masters
    remote_user: ec2-user
    gather_facts: False
    become: yes
    tasks:
      - name: Render Docker compose
        template:
          src: docker-compose.yaml.j2
          dest: "/tmp/docker-compose.yaml"
  
  - name: build Dockerfile
    hosts: all
    remote_user: ec2-user
    gather_facts: False
    tasks:
      - name: build Dockerfile
        shell: docker build -t app .

  - name: deploy APP 
    hosts: masters
    remote_user: ec2-user
    gather_facts: False
    tasks:
      - name: deploy APP
        shell: docker stack deploy -c /tmp/docker-compose.yaml app
        register: result_app

  